Assignment 1: 

The aim is to implement a simple 2 stage communication protocol. You require to implement two C/C++ programs, namely server and client 
to communicate with each other based on both TCP and UDP sockets as follows :

Phase I :
  1. Initially, server will be waiting for a TCP connection from the client. 
  2. client will connect to the server using serverâ€™s TCP port already known to the client. 
  3. After successful connection, the client sends a Request Message (Type 1 message) to the server via TCP port to request a UDP port 
     from server for future communication. 
  4. After receiving the Request Message, server obtains a UDP port number and sends this port number back to the 
     client as a Response Message (Type 2 Message) over the TCP connection. 
  5. After this negotiation phase, the TCP connection on both the server and client should be closed gracefully releasing the socket resource. 

Phase II :
  1. The client transmits a short Data Message (Type 3 message) over the negotiated UDP port. The server will display the received Data Message
     and sends a Data Response (type 4 message) to indicate the successful reception. After this data transfer phase, both sides close their 
     UDP sockets. T
     
Note :-
  1. Messages Format: Message_type (integer), Message_length (integer), Message (characters of a fixed length). 
  2. <Data Message> in Client will be the content of the message in Type 3 as explained above. 
  3. You also require implementing a "Concurrent Server" (a server that accepts connections from multiple clients and serves all of them concurrently)
  4. You should accept the IP Address and Port number from the command line (Don't use a hard-coded port number). 
  5. Prototype for command line is as follows: 
     Client :<executable code><Server IP Address><Server Port number> 
     Server :<executable code><Server Port number> 

*Please make necessary and valid assumptions whenever required.

